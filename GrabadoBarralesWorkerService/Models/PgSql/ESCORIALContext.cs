// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GrabadoBarralesWorkerService.Models.PgSql;

public partial class ESCORIALContext : DbContext
{
    public ESCORIALContext()
    {
    }

    public ESCORIALContext(DbContextOptions<ESCORIALContext> options)
        : base(options)
    {
    }

    public virtual DbSet<etiquetas_maestro_barrales> etiquetas_maestro_barrales { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        IConfiguration configuration = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory()) // Ruta al directorio del proyecto
            .AddJsonFile("appsettings.json") // Nombre del archivo de configuración
            .Build();

        var connectionString = configuration.GetConnectionString("ESCORIAL"); // Nombre de la cadena de conexión en appsettings.json

        if (!string.IsNullOrEmpty(connectionString))
        {
            optionsBuilder.UseNpgsql(connectionString);
        }
        else
        {
            // Manejo de error si la cadena de conexión no se encuentra en appsettings.json
            throw new Exception("No se encontró la cadena de conexión 'ESCORIAL' en appsettings.json");
        }
    }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .HasPostgresExtension("fuzzystrmatch")
            .HasPostgresExtension("hstore")
            .HasPostgresExtension("ltree")
            .HasPostgresExtension("pg_stat_statements")
            .HasPostgresExtension("pgstattuple")
            .HasPostgresExtension("unaccent");

        modelBuilder.Entity<etiquetas_maestro_barrales>(entity =>
        {
            entity.HasKey(e => e.id).HasName("etiquetas_maestro_barrales_pkey");

            entity.Property(e => e.id).HasDefaultValueSql("nextval('etiquetas_maestro_barrales_id_seq'::regclass)");
        });
        modelBuilder.HasSequence("aux_suceso_inc_seq");
        modelBuilder.HasSequence("hibernate_sequence", "web");

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}